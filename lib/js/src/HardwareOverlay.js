// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Electron = require("./lib/Electron.js");
var ConfigReader = require("./lib/ConfigReader.js");

var ipcRenderer = Electron.Electron.ipcRenderer;

function s(prim) {
  return prim;
}

function HardwareOverlay(Props) {
  var systemInfoStartValue = {
    cpu: 0.0,
    gpu: 0.0,
    memoryTotal: 0,
    memoryFree: 0,
    memoryPercentage: 0.0
  };
  var match = React.useState(function () {
        return systemInfoStartValue;
      });
  var setSystemInfo = match[1];
  var systemInfo = match[0];
  var match$1 = React.useState(function () {
        return "top-right";
      });
  var setContainerPos = match$1[1];
  var match$2 = React.useState(function () {
        return "#08080864";
      });
  var setContainerBackground = match$2[1];
  var match$3 = React.useState(function () {
        return true;
      });
  var setShowHardwareOverlayHeader = match$3[1];
  var sendToIpcMain = function (param) {
    var response = ipcRenderer.sendSync("get-system-infos", null);
    return Curry._1(setSystemInfo, (function (param) {
                  return response;
                }));
  };
  var mergeAndReadConfigFile = function (param) {
    ConfigReader.ConfigReader.mergeSettingsFile(undefined);
    var data = ConfigReader.ConfigReader.readSettingsFile(undefined);
    Curry._1(setContainerPos, (function (param) {
            return data.hardwareOverlayPos;
          }));
    Curry._1(setContainerBackground, (function (param) {
            return data.backgroundColor;
          }));
    return Curry._1(setShowHardwareOverlayHeader, (function (param) {
                  return data.showHardwareOverlayHeader;
                }));
  };
  React.useEffect((function () {
          mergeAndReadConfigFile(undefined);
          setInterval(sendToIpcMain, 1500);
          
        }), []);
  return React.createElement("div", {
              className: "hardware-overlay-wrapper"
            }, React.createElement("div", {
                  className: "system-informations " + match$1[0],
                  style: {
                    backgroundColor: match$2[0]
                  }
                }, match$3[0] ? React.createElement("h1", {
                        className: "header-container"
                      }, React.createElement("img", {
                            className: "image",
                            src: "./src/assets/rocket-20x20.png"
                          }), React.createElement("p", {
                            className: "text"
                          }, "FIVE.FPS")) : React.createElement("div", {
                        style: {
                          display: "none"
                        }
                      }), React.createElement("div", {
                      style: {
                        display: "flex",
                        padding: "5px 10px",
                        alignItems: "center",
                        flexDirection: "row",
                        justifyContent: "space-between"
                      }
                    }, React.createElement("div", {
                          className: "info-container"
                        }, React.createElement("p", {
                              className: "label"
                            }, "CPU: "), React.createElement("p", {
                              className: "value"
                            }, systemInfo.cpu.toFixed(1), "%")), React.createElement("div", {
                          className: "info-container"
                        }, React.createElement("p", {
                              className: "label"
                            }, "GPU: "), React.createElement("p", {
                              className: "value"
                            }, systemInfo.gpu.toFixed(1), "%")), React.createElement("div", {
                          className: "info-container"
                        }, React.createElement("p", {
                              className: "label"
                            }, "RAM: "), React.createElement("p", {
                              className: "value"
                            }, systemInfo.memoryPercentage.toFixed(1), "%")))));
}

var make = HardwareOverlay;

exports.ipcRenderer = ipcRenderer;
exports.s = s;
exports.make = make;
/* react Not a pure module */
